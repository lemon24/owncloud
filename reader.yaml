
- hosts: all
  gather_facts: no
  become: true
  become_method: sudo
  tasks:

  - name: create apps directory
    file:
      path: /apps
      state: directory


  - name: install uwsgi
    package:
      name: "{{ item }}"
      state: latest
    loop:
      - uwsgi
      - uwsgi-plugin-python3

  # TODO: stop uwsgi reader service, remove from nginx, remove virtualenv

  - name: install venv
    package:
      name: python3-venv
      state: latest

  - name: create virtualenv with the latest pip
    pip:
      name: pip
      virtualenv: /apps/reader
      virtualenv_command: /usr/bin/python3 -m venv
      virtualenv_site_packages: yes
      state: latest

  - name: install reader
    pip:
      name:
        - pip
        - "git+https://github.com/lemon24/reader.git#egg=reader[cli,web-app,enclosure-tags]"
      virtualenv: /apps/reader
      state: latest

  - name: install packages needed to build sqlite
    package:
      name: "{{ item }}"
      state: latest
    loop:
      - gcc
      - unzip

  - name: create sqlite temporary build directory
    tempfile:
      state: directory
    register: sqlite_build_dir

  # TODO: checkout the reader repo once (to install it) and that build-sqlite.sh
  - name: get sqlite build script
    get_url:
      url: https://raw.githubusercontent.com/lemon24/reader/master/scripts/build-sqlite.sh
      dest: "{{ sqlite_build_dir.path }}"

  - name: compile new enough sqlite
    command: "sh {{ sqlite_build_dir.path }}/build-sqlite.sh /apps/reader/"

  - name: remove sqlite temporary build directory
    file:
      path: "{{ sqlite_build_dir.path }}"
      state: absent

  - name: create database directory
    file:
      path: /data/www-data
      state: directory
      owner: www-data

  # TODO: should use emperor
  - name: create uwsgi config file
    copy:
      dest: /apps/reader/uwsgi.ini
      content: |
        [uwsgi]
        socket = /apps/reader/uwsgi/sock
        manage-script-name = true
        mount = /reader=reader.app.wsgi:app
        plugin = python3
        virtualenv = /apps/reader/
        env = READER_DB=/data/www-data/reader.sqlite

  # TODO: permissions
  - name: create uwsgi socket dir
    file:
      path: /apps/reader/uwsgi
      state: directory
      owner: www-data

  - name: create uwsgi reader service
    copy:
      dest: /etc/systemd/system/uwsgi_reader.service
      content: |
        [Unit]
        Description=uwsgi reader
        After=syslog.target

        [Service]
        User=www-data
        ExecStart=/bin/sh -c 'LD_LIBRARY_PATH=/apps/reader/sqlite:$LD_LIBRARY_PATH /usr/bin/uwsgi --ini /apps/reader/uwsgi.ini'
        Restart=always
        KillSignal=SIGQUIT
        Type=notify
        StandardError=syslog
        NotifyAccess=all

        [Install]
        WantedBy=multi-user.target

  - name: restart uwsgi reader service
    service:
      name: uwsgi_reader
      state: restarted

  - name: add nginx config
    copy:
      dest: /etc/nginx/secure/reader.conf
      content: |
        location /reader/ {
            include uwsgi_params;
            uwsgi_pass unix:/apps/reader/uwsgi/sock;
        }

        location = /reader { rewrite ^ /reader/; }

        location /reader/static/ {
            alias /apps/reader/lib/python3.5/site-packages/reader/app/static/;
        }

  - name: reload nginx config
    command: nginx -s reload

  - name: create log directory
    file:
      path: /var/log/reader
      state: directory
      owner: www-data

  - name: add crontab entry to update all feeds
    cron:
      name: reader update
      user: www-data
      special_time: hourly
      job: >
        LD_LIBRARY_PATH=/apps/reader/sqlite
        READER_PLUGIN='reader.plugins.tumblr_gdpr:tumblr_gdpr reader.plugins.regex_mark_as_read:regex_mark_as_read'
        READER_PLUGIN_REGEX_MARK_AS_READ_CONFIG='/data/www-data/regex_mark_as_read_config.json'
        /apps/reader/bin/python -m reader
        --db /data/www-data/reader.sqlite update -v
        >>/var/log/reader/update.log 2>&1

  - name: add crontab entry to update new feeds
    cron:
      name: reader update new
      user: www-data
      job: >
        LD_LIBRARY_PATH=/apps/reader/sqlite
        READER_PLUGIN='reader.plugins.tumblr_gdpr:tumblr_gdpr reader.plugins.regex_mark_as_read:regex_mark_as_read'
        READER_PLUGIN_REGEX_MARK_AS_READ_CONFIG='/data/www-data/regex_mark_as_read_config.json'
        /apps/reader/bin/python -m reader
        --db /data/www-data/reader.sqlite update --new-only -v
        >>/var/log/reader/update.log 2>&1

  # TODO: backup database to s3

