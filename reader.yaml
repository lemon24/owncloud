# should work with Ubuntu 20.04 LTS

# TODO: run sudo apt-get update first

- hosts: "{{ hosts | default('hosts')}}"
  gather_facts: no
  become: true
  become_method: sudo
  tasks:

  - name: create apps directory
    file:
      path: /apps
      state: directory

  - name: create log directory
    file:
      path: /var/log/reader
      state: directory
      owner: www-data

  - name: install packages
    package:
      name: "{{ item }}"
      state: latest
    loop:
      - uwsgi
      - uwsgi-plugin-python3
      - python3-venv
      - python3-psutil
      - earlyoom

  # TODO: this should be configured globally
  - name: configure earlyoom
    lineinfile:
      path: /etc/default/earlyoom
      regexp: '^EARLYOOM_ARGS='
      line: EARLYOOM_ARGS="--prefer 'uwsgi'"

  # TODO: stop uwsgi reader service, remove from nginx, remove virtualenv

  - name: create virtualenv with the latest pip and setuptools
    pip:
      name:
        - pip
      virtualenv: /apps/reader
      virtualenv_command: /usr/bin/python3 -m venv
      state: latest

  - name: get the virtualenv python version
    command:
      argv:
      - /apps/reader/bin/python
      - -c
      - from sys import version_info as v; print(f"{v.major}.{v.minor}")
    register: python_version

  - name: save the python version
    set_fact:
      python_version: "{{ python_version.stdout }}"

  - name: install reader
    pip:
      name: "reader [readtime,cli,app,unstable-plugins] @ https://github.com/lemon24/reader/archive/refs/heads/master.zip"
      virtualenv: /apps/reader
      state: forcereinstall

  - name: create reader config file
    copy:
      # TODO: may fail if cwd is not in the repo
      src: reader-data/reader-config.yaml
      dest: /apps/reader/reader.yaml

  - name: create database directory
    file:
      path: /data/www-data
      state: directory
      owner: www-data

  - name: enable reader search
    shell: >
      LC_ALL=en_US.utf-8
      READER_CONFIG=/apps/reader/reader.yaml
      /apps/reader/bin/python -m reader search enable
    become: true
    become_user: www-data

  - name: update reader search once
    shell: >
      LC_ALL=en_US.utf-8
      READER_CONFIG=/apps/reader/reader.yaml
      /apps/reader/bin/python -m reader search update
    become: true
    become_user: www-data

  # TODO: should use emperor
  - name: create uwsgi config file
    copy:
      dest: /apps/reader/uwsgi.ini
      content: |
        [uwsgi]
        socket = /apps/reader/uwsgi/sock
        manage-script-name = true
        mount = /reader=reader._app.wsgi:app
        plugin = python3
        virtualenv = /apps/reader/
        env = READER_CONFIG=/apps/reader/reader.yaml
        logto = /var/log/reader/uwsgi.log

        max-requests = 100

  # TODO: permissions
  - name: create uwsgi socket dir
    file:
      path: /apps/reader/uwsgi
      state: directory
      owner: www-data

  - name: create uwsgi reader service
    copy:
      dest: /etc/systemd/system/uwsgi_reader.service
      content: |
        [Unit]
        Description=uwsgi reader
        After=syslog.target

        [Service]
        User=www-data
        ExecStart=/bin/sh -c '/usr/bin/uwsgi --ini /apps/reader/uwsgi.ini'
        Restart=always
        KillSignal=SIGQUIT
        Type=notify
        StandardError=syslog
        NotifyAccess=all

        [Install]
        WantedBy=multi-user.target

  - name: restart uwsgi reader service
    service:
      name: uwsgi_reader
      state: restarted
      enabled: yes

  - name: add nginx config
    template:
      # TODO: may fail if cwd is not in the repo
      src: reader-data/nginx.conf
      dest: /etc/nginx/secure/reader.conf

  - name: reload nginx config
    command: nginx -s reload

  # TODO: use the cron env parameter

  - name: add crontab entry to update scheduled feeds and the search index
    cron:
      name: reader update scheduled
      user: www-data
      job: >
        LC_ALL=en_US.utf-8
        READER_CONFIG=/apps/reader/reader.yaml
        /apps/reader/bin/python -m reader
        --cli-plugin reader._plugins.cli_status.init_cli
        update --workers 2 --scheduled
        >>/var/log/reader/update.log 2>&1
        &&
        LC_ALL=en_US.utf-8
        READER_CONFIG=/apps/reader/reader.yaml
        /apps/reader/bin/python -m reader search update
        >>/var/log/reader/update.log 2>&1

  # TODO: backup database to s3

