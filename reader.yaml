# should work with Ubuntu 18.04.2 LTS

# TODO: run sudo apt-get update first

- hosts: all
  gather_facts: no
  become: true
  become_method: sudo
  tasks:

  - name: create apps directory
    file:
      path: /apps
      state: directory

  - name: install uwsgi
    package:
      name: "{{ item }}"
      state: latest
    loop:
      - uwsgi
      - uwsgi-plugin-python3

  # TODO: stop uwsgi reader service, remove from nginx, remove virtualenv

  - name: install venv
    package:
      name: python3-venv
      state: latest

  - name: install psutil
    package:
      name: python3-psutil
      state: latest

  - name: create virtualenv with the latest pip
    pip:
      name: pip
      virtualenv: /apps/reader
      virtualenv_command: /usr/bin/python3 -m venv
      virtualenv_site_packages: yes
      state: latest

  - name: install reader
    pip:
      name:
        - pip
        - "git+https://github.com/lemon24/reader.git#egg=reader[cli,app,enclosure-tags,preview-feed-list,search]"
      virtualenv: /apps/reader
      state: forcereinstall

  - name: create reader config file
    copy:
      # TODO: may fail if cwd is not in the repo
      src: reader-data/reader-config.yaml
      dest: /apps/reader/reader.yaml

  - name: create database directory
    file:
      path: /data/www-data
      state: directory
      owner: www-data

  - name: enable reader search
    shell: >
      LC_ALL=en_US.utf-8
      READER_CONFIG=/apps/reader/reader.yaml
      /apps/reader/bin/python -m reader search enable

  - name: update reader search once
    shell: >
      LC_ALL=en_US.utf-8
      READER_CONFIG=/apps/reader/reader.yaml
      /apps/reader/bin/python -m reader search update

  # TODO: should use emperor
  - name: create uwsgi config file
    copy:
      dest: /apps/reader/uwsgi.ini
      content: |
        [uwsgi]
        socket = /apps/reader/uwsgi/sock
        manage-script-name = true
        mount = /reader=reader._app.wsgi:app
        plugin = python3
        virtualenv = /apps/reader/
        env = READER_CONFIG=/apps/reader/reader.yaml

        plugins = carbon
        carbon = 127.0.0.1:1111
        #enable-metrics = true
        #carbon-use-metrics = true
        carbon-id = reader
        carbon-hostname-dots = -

  # TODO: permissions
  - name: create uwsgi socket dir
    file:
      path: /apps/reader/uwsgi
      state: directory
      owner: www-data

  - name: create uwsgi reader service
    copy:
      dest: /etc/systemd/system/uwsgi_reader.service
      content: |
        [Unit]
        Description=uwsgi reader
        After=syslog.target

        [Service]
        User=www-data
        ExecStart=/bin/sh -c '/usr/bin/uwsgi --ini /apps/reader/uwsgi.ini'
        Restart=always
        KillSignal=SIGQUIT
        Type=notify
        StandardError=syslog
        NotifyAccess=all

        [Install]
        WantedBy=multi-user.target

  - name: restart uwsgi reader service
    service:
      name: uwsgi_reader
      state: restarted
      enabled: yes

  # TODO: find a way to make this independent of the python3 version
  - name: add nginx config
    copy:
      dest: /etc/nginx/secure/reader.conf
      content: |
        location /reader/ {
            include uwsgi_params;
            uwsgi_pass unix:/apps/reader/uwsgi/sock;
        }

        location = /reader { rewrite ^ /reader/; }

        location /reader/static/ {
            alias /apps/reader/lib/python3.6/site-packages/reader/_app/static/;
        }

  - name: reload nginx config
    command: nginx -s reload

  - name: create log directory
    file:
      path: /var/log/reader
      state: directory
      owner: www-data

  # TODO: use the cron env parameter

  - name: add crontab entry to update all feeds
    cron:
      name: "reader update {{ item }}"
      user: www-data
      special_time: "{{ item }}"
      job: >
        LC_ALL=en_US.utf-8
        READER_CONFIG=/apps/reader/reader.yaml
        /apps/reader/bin/python -m reader update --workers 4
        >>/var/log/reader/update.log 2>&1
    loop:
      - hourly
      - reboot

  - name: add crontab entry to update new feeds and the search index
    cron:
      name: reader update new
      user: www-data
      job: >
        LC_ALL=en_US.utf-8
        READER_CONFIG=/apps/reader/reader.yaml
        /apps/reader/bin/python -m reader update --new-only
        >>/var/log/reader/update.log 2>&1
        &&
        LC_ALL=en_US.utf-8
        READER_CONFIG=/apps/reader/reader.yaml
        /apps/reader/bin/python -m reader search update
        >>/var/log/reader/update.log 2>&1

  # TODO: backup database to s3

